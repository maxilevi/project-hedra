name: Publish Hedra

on: 
  workflow_dispatch:
    inputs:
      buildConfig:
        description: 'Build Configuration (Debug or Release)'     
        required: true
        default: 'Release'

jobs:
  build:
    name: Publish on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
    
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.HEDRA_CI }}
        submodules: true
      
    - name: Setup Dotnet for use with actions
      uses: actions/setup-dotnet@v1
      with:
          dotnet-version: '6.0.100'

    - name: Build Dependencies windows
      if: matrix.os == 'windows-latest'
      shell: bash
      run: ./build-deps-windows.sh

    - name: Build Dependencies ubuntu
      if: matrix.os == 'ubuntu-latest'
      shell: bash  
      run: sudo ./build-deps-linux.sh

    - name: Publish on windows
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        ./scripts/publish.sh win-x64 ${{ github.event.inputs.buildConfig }}
        ./scripts/publish.sh win-x86 ${{ github.event.inputs.buildConfig }}
        mkdir Hedra/bin/${{ github.event.inputs.buildConfig }}/assets/
        cp Hedra/bin/${{ github.event.inputs.buildConfig }}/netcoreapp6.0/win-x64/data1.db Hedra/bin/${{ github.event.inputs.buildConfig }}/assets/data1.db
        cp Hedra/bin/${{ github.event.inputs.buildConfig }}/netcoreapp6.0/win-x64/data2.db Hedra/bin/${{ github.event.inputs.buildConfig }}/assets/data2.db
        cp Hedra/bin/${{ github.event.inputs.buildConfig }}/netcoreapp6.0/win-x64/data3.db Hedra/bin/${{ github.event.inputs.buildConfig }}/assets/data3.db

    - name: Publish on ubuntu
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        cat ./scripts/publish.sh | bash -s linux-x64 ${{ github.event.inputs.buildConfig }}

    - uses: actions/upload-artifact@v1
      name: Upload ubuntu
      if: matrix.os == 'ubuntu-latest'
      with:
        name: hedra-linux-x64
        path: Hedra/bin/${{ github.event.inputs.buildConfig }}/netcoreapp6.0/linux-x64/publish

    - uses: actions/upload-artifact@v1
      name: Upload windows x64
      if: matrix.os == 'windows-latest'
      with:
        name: hedra-win-x64
        path: Hedra/bin/${{ github.event.inputs.buildConfig }}/netcoreapp6.0/win-x64/publish

    - uses: actions/upload-artifact@v1
      name: Upload windows x86
      if: matrix.os == 'windows-latest'
      with:
        name: hedra-win-x86
        path: Hedra/bin/${{ github.event.inputs.buildConfig }}/netcoreapp6.0/win-x86/publish

    - uses: actions/upload-artifact@v1
      name: Upload assets
      if: matrix.os == 'windows-latest'
      with:
        name: hedra-assets
        path: Hedra/bin/${{ github.event.inputs.buildConfig }}/assets

  deploy_steam:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: mkdir builds

      - uses: actions/download-artifact@v2
        with:
          path: builds

      - uses: game-ci/steam-deploy@v1
        with:
          username: ${{ secrets.STEAM_USERNAME }}
          password: ${{ secrets.STEAM_PASSWORD }}
          configVdf: ${{ secrets.STEAM_CONFIG_VDF}}
          ssfnFileName: ${{ secrets.STEAM_SSFN_FILE_NAME }}
          ssfnFileContents: ${{ secrets.STEAM_SSFN_FILE_CONTENTS }}
          appId: 1009960
          buildDescription: ${{ github.sha }}
          rootPath: builds
          depot2Path: hedra-assets
          depot3Path: hedra-win-x86
          depot4Path: hedra-win-x64
          depot5Path: hedra-linux-x64
          releaseBranch: test
