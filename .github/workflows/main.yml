name: Hedra CI

on: [push]

jobs:
  build-deps:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
    
    steps:
    - uses: actions/checkout@v2
      with:
        repository: maxilevi/hedra-core
        token: ${{ secrets.HEDRA_CI }}
        #submodules: true
      
    - name: Setup Dotnet for use with actions
      uses: actions/setup-dotnet@v1
      with:
          dotnet-version: '6.0.x'

    - name: Build Dependencies windows
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        ./build-deps-windows.sh
        mkdir Hedra/core-artifact
        cp Hedra/x86/hedracore.dll Hedra/core-artifact/hedracore-x86.dll
        cp Hedra/x64/hedracore.dll Hedra/core-artifact/hedracore-x64.dll

    - name: Build Dependencies ubuntu
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        sudo ./build-deps-linux.sh
        mkdir Hedra/core-artifact
        cp Hedra/x86/libhedracore.so Hedra/core-artifact/libhedracore-x32.so
        cp Hedra/x64/libhedracore.so Hedra/core-artifact/libhedracore-x64.so

    - uses: actions/upload-artifact@master
      with:
        name: hedra-core-${{ matrix.os }}
        path: Hedra/core-artifact

  publish:
    name: Publish on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    depends-on: build-deps
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]

    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.HEDRA_CI }}
        submodules: true

    - uses: actions/download-artifact@master
      with:
        name: hedra-core-${{ matrix.os }}
        path: Hedra/core-artifact

    - name: Setup hedracore
      run: |
        cp Hedra/core-artifact/libhedracore-x32.so Hedra/x86/libhedracore.so || true
        cp Hedra/core-artifact/libhedracore-x64.so Hedra/x64/libhedracore.so || true
        cp Hedra/core-artifact/hedracore-x86.dll Hedra/x86/hedracore.dll || true
        cp Hedra/core-artifact/hedracore-x64.dll Hedra/x64/hedracore.dll || true
        rm -rf Hedra/core-artifact

    - name: Publish on windows
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        ./scripts/publish.sh win-x64
        ./scripts/publish.sh win-x86
        mkdir Hedra/bin/Release/assets/
        cp Hedra/bin/Release/netcoreapp6.0/win-x64/data1.db Hedra/bin/Release/assets/data1.db
        cp Hedra/bin/Release/netcoreapp6.0/win-x64/data2.db Hedra/bin/Release/assets/data2.db
        cp Hedra/bin/Release/netcoreapp6.0/win-x64/data3.db Hedra/bin/Release/assets/data3.db


    - name: Publish on ubuntu
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        sudo ./scripts/publish.sh linux-x64

    - uses: actions/upload-artifact@v1
      name: Upload ubuntu
      if: matrix.os == 'ubuntu-latest'
      with:
        name: hedra-linux-x64
        path: Hedra/bin/Release/netcoreapp6.0/linux-x64/publish

    - uses: actions/upload-artifact@v1
      name: Upload windows
      if: matrix.os == 'windows-latest'
      with:
        name: hedra-win-x64
        path: Hedra/bin/Release/netcoreapp6.0/win-x64/publish

    - uses: actions/upload-artifact@v1
      name: Upload windows
      if: matrix.os == 'windows-latest'
      with:
        name: hedra-win-x86
        path: Hedra/bin/Release/netcoreapp6.0/win-x86/publish

    - uses: actions/upload-artifact@v1
      name: Upload assets
      if: matrix.os == 'windows-latest'
      with:
        name: hedra-assets
        path: Hedra/bin/Release/assets
